name: CI Pipeline

on:
  pull_request:
    branches:
      - develop
      - master

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [21.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: "Install packages"
        run: npm install

      - name: "Create .env"
        run: |
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" > .env &&
          echo "TZ=${{ secrets.TZ }}" >> .env &&
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env &&
          echo "MONGO_URI2=${{ secrets.MONGO_URI2 }}" >> .env &&
          echo "PORT=${{ secrets.PORT }}" >> .env &&
          echo "PATH_API=${{ secrets.PATH_API }}" >> .env &&
          echo "SYNCHRONIZE=${{ secrets.SYNCHRONIZE }}" >> .env &&
          echo "RUN_MIGRATIONS=${{ secrets.RUN_MIGRATIONS }}" >> .env

      - name: "Set up Dockerfile"
        run: |
          echo "FROM node:14" > Dockerfile
          echo "WORKDIR ${{ secrets.PATH_API }}" >> Dockerfile
          echo "COPY package*.json ./" >> Dockerfile
          echo "RUN npm install --legacy-peer-deps" >> Dockerfile
          echo "COPY . ." >> Dockerfile
          echo "RUN npm run build" >> Dockerfile
          echo "EXPOSE ${{ secrets.PORT }}" >> Dockerfile
          echo "CMD ["node", "dist/main"]" >> Dockerfile

      - name: "Docker login"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build Docker image"
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            thiaguinhobyra/nest_aws_mongodb:v1
            thiaguinhobyra/nest_aws_mongodb:latest
        
